{"version":3,"sources":["main.min.js","main.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","urls","google","images","news","groups","froogle","maps","amazon","youtube","wikipedia","getTerms","$","val","quikhome","which","log","preventDefault","url","String","test","go","fsu"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;CCmBA,WAOE,GAAIA,GAAcC,QAAqC,cAA7BC,OAAOC,SAASC,UAET,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,0DAIF,kBAAmBC,aACW,WAA7BJ,OAAOC,SAASI,UAAyBP,IAC5CM,UAAUE,cAAcC,SAAS,qBAChCC,KAAK,SAASC,GAEbA,EAAaC,cAAgB,WAK3B,GAAIN,UAAUE,cAAcK,WAAY,CAGtC,GAAIC,GAAmBH,EAAaI,UAEpCD,GAAiBE,cAAgB,WAC/B,OAAQF,EAAiBG,OACvB,IAAK,YAKH,KAEF,KAAK,YACH,KAAM,IAAIC,OAAM,yDAvB5BZ,SAgCS,SAASa,GAChBC,QAAQC,MAAM,4CAA6CF,IAI/D,IAAIG,IACFC,OAAQ,gCACRC,OAAQ,kCACRC,KAAM,8BACNC,OAAQ,kCACRC,QAAS,oCACTC,KAAM,8BACNC,OAAQ,wBACRC,QAAS,iCACTC,UAAW,iCAGTC,EAAW,WACb,MAAOC,GAAE,kBAAkBC,OAIzBC,GACFZ,OAAQ,SAACJ,EAAGiB,GACVhB,QAAQiB,IAAIlB,EAAGiB,GACfjB,EAAEmB,iBACFpC,OAAOC,SAAcmB,EAAKc,GAA1B,MAAsCJ,KAExCO,IAAK,QAAAA,GAAApB,GACHA,EAAEmB,gBACF,IAAIC,GAAMC,OAAOP,EAAE,YAAYC,MAC3B,gBAAeO,KAAKF,GACtBrC,OAAOC,SAAYoC,EAEf,eAAeE,KAAKF,GACtBrC,OAAOC,SAAP,UAA6BoC,EAE7BrC,OAAOC,SAAP,UAA6BoC,EAA7B,QAINT,QAAS,SAAAX,GACPA,EAAEmB,iBACFpC,OAAOC,SAAcmB,EAAKQ,QAA1B,MAAuCG,EAAE,mBAAmBC,OAE9DH,UAAW,SAAAZ,GACTA,EAAEmB,iBACFpC,OAAOC,SAAcmB,EAAKS,UAA1B,IAAuCE,EAAE,qBAAqBC,OAEhEQ,GAAI,SAACvB,EAAGiB,GACNjB,EAAEmB,iBACFpC,OAAOC,SAAP,GAAqBmB,EAAKc,IAE5BO,IAAK,SAAAxB,GACHA,EAAEmB,iBACFpC,OAAOC,SAAcmB,EAAKC,OAA1B,mBAAmDS,KAIvD9B,QAAOiC,SAAWA","file":"main.min.js","sourcesContent":["'use strict';\n\n/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n(function () {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\n  if ('serviceWorker' in navigator && (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js').then(function (registration) {\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function () {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function () {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' + 'service worker became redundant.');\n\n              default:\n              // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function (e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  var urls = {\n    google: 'https://www.google.com/search',\n    images: 'http://images.google.com/images',\n    news: 'http://news.google.com/news',\n    groups: 'http://groups.google.com/groups',\n    froogle: 'http://froogle.google.com/froogle',\n    maps: 'http://maps.google.com/maps',\n    amazon: 'http://www.amazon.com',\n    youtube: 'http://www.youtube.com/results',\n    wikipedia: 'http://www.wikipedia.com/wiki'\n  };\n\n  var getTerms = function getTerms() {\n    return $('#google-search').val();\n  };\n\n  // Your custom JavaScript goes here\n  var quikhome = {\n    google: function google(e, which) {\n      console.log(e, which);\n      e.preventDefault();\n      window.location = urls[which] + '?q=' + getTerms();\n    },\n    url: function url(e) {\n      e.preventDefault();\n      var url = String($('#url-box').val());\n      if (/^https?:\\/\\//.test(url)) {\n        window.location = url;\n      } else {\n        if (/\\.[\\w]{2,4}$/.test(url)) {\n          window.location = 'http://' + url;\n        } else {\n          window.location = 'http://' + url + '.com';\n        }\n      }\n    },\n    youtube: function youtube(e) {\n      e.preventDefault();\n      window.location = urls.youtube + '?q=' + $('#youtube-search').val();\n    },\n    wikipedia: function wikipedia(e) {\n      e.preventDefault();\n      window.location = urls.wikipedia + '/' + $('#wikipedia-search').val();\n    },\n    go: function go(e, which) {\n      e.preventDefault();\n      window.location = '' + urls[which];\n    },\n    fsu: function fsu(e) {\n      e.preventDefault();\n      window.location = urls.google + '?q=site:fsu.edu ' + getTerms();\n    }\n  };\n\n  window.quikhome = quikhome;\n})();\n//# sourceMappingURL=data:application/json;charset=utf8;base64,\n","/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  var urls = {\n    google: 'https://www.google.com/search',\n    images: 'http://images.google.com/images',\n    news: 'http://news.google.com/news',\n    groups: 'http://groups.google.com/groups',\n    froogle: 'http://froogle.google.com/froogle',\n    maps: 'http://maps.google.com/maps',\n    amazon: 'http://www.amazon.com',\n    youtube: 'http://www.youtube.com/results',\n    wikipedia: 'http://www.wikipedia.com/wiki',\n  };\n\n  var getTerms = () => {\n    return $('#google-search').val();\n  };\n\n  // Your custom JavaScript goes here\n  var quikhome = {\n    google: (e, which) => {\n      console.log(e, which);\n      e.preventDefault();\n      window.location = `${urls[which]}?q=${getTerms()}`;\n    },\n    url: e => {\n      e.preventDefault();\n      let url = String($('#url-box').val());\n      if (/^https?:\\/\\//.test(url)) {\n        window.location = (url);\n      } else {\n        if (/\\.[\\w]{2,4}$/.test(url)) {\n          window.location = (`http://${url}`);\n        } else {\n          window.location = (`http://${url}.com`);\n        }\n      }\n    },\n    youtube: e => {\n      e.preventDefault();\n      window.location = `${urls.youtube}?q=${$('#youtube-search').val()}`;\n    },\n    wikipedia: e => {\n      e.preventDefault();\n      window.location = `${urls.wikipedia}/${$('#wikipedia-search').val()}`;\n    },\n    go: (e, which) => {\n      e.preventDefault();\n      window.location = `${urls[which]}`;\n    },\n    fsu: e => {\n      e.preventDefault();\n      window.location = `${urls.google}?q=site:fsu.edu ${getTerms()}`;\n    },\n  };\n\n  window.quikhome = quikhome;\n})();\n"]}