{"version":3,"sources":["main.min.js","main.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","urls","google","images","news","groups","froogle","maps","amazon","youtube","wikipedia","fsudirectory","getTerms","$","val","quikhome","which","preventDefault","log","url","String","test","go","fsu"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;CCmBA,WAOE,GAAIA,GAAcC,QAAqC,cAA7BC,OAAOC,SAASC,UAET,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,0DAIF,kBAAmBC,aACW,WAA7BJ,OAAOC,SAASI,UAAyBP,IAC5CM,UAAUE,cAAcC,SAAS,qBAChCC,KAAK,SAASC,GAEbA,EAAaC,cAAgB,WAK3B,GAAIN,UAAUE,cAAcK,WAAY,CAGtC,GAAIC,GAAmBH,EAAaI,UAEpCD,GAAiBE,cAAgB,WAC/B,OAAQF,EAAiBG,OACvB,IAAK,YAKH,KAEF,KAAK,YACH,KAAM,IAAIC,OAAM,yDAvB5BZ,SAgCS,SAASa,GAChBC,QAAQC,MAAM,4CAA6CF,IAI/D,IAAIG,IACFC,OAAQ,gCACRC,OAAQ,mCACRC,KAAM,+BACNC,OAAQ,mCACRC,QAAS,gCACTC,KAAM,8BACNC,OAAQ,wBACRC,QAAS,iCACTC,UAAW,gCACXC,aAAc,qDAGZC,EAAW,WACb,MAAOC,GAAE,kBAAkBC,OAIzBC,GACFb,OAAQ,SAACJ,EAAGkB,GACVlB,EAAEmB,iBACY,SAAVD,GACFjB,QAAQmB,IAAI,OACZrC,OAAOC,SAAcmB,EAAKe,GAA1B,qBAAqDJ,KAClC,YAAVI,EACTnC,OAAOC,SAAcmB,EAAKe,GAA1B,eAA+CJ,IAE/C/B,OAAOC,SAAcmB,EAAKe,GAA1B,MAAsCJ,KAG1CO,IAAK,QAAAA,GAAArB,GACHA,EAAEmB,gBACF,IAAIE,GAAMC,OAAOP,EAAE,YAAYC,MAC3B,gBAAeO,KAAKF,GACtBtC,OAAOC,SAAYqC,EAEf,eAAeE,KAAKF,GACtBtC,OAAOC,SAAP,UAA6BqC,EAE7BtC,OAAOC,SAAP,UAA6BqC,EAA7B,QAINV,QAAS,SAAAX,GACPA,EAAEmB,iBACFpC,OAAOC,SAAcmB,EAAKQ,QAA1B,MAAuCI,EAAE,mBAAmBC,OAE9DJ,UAAW,SAAAZ,GACTA,EAAEmB,iBACFpC,OAAOC,SAAcmB,EAAKS,UAA1B,IAAuCG,EAAE,qBAAqBC,OAEhEQ,GAAI,SAACxB,EAAGkB,GACNlB,EAAEmB,iBACFpC,OAAOC,SAAP,GAAqBmB,EAAKe,IAE5BO,IAAK,SAAAzB,GACHA,EAAEmB,iBACFpC,OAAOC,SAAcmB,EAAKC,OAA1B,mBAAmDU,KAErDD,aAAc,SAAAb,GACZA,EAAEmB,iBACFpC,OAAOC,SAAcmB,EAAKU,aAA1B,aAAmDE,EAAE,eAAeC,MAApE,QAIJjC,QAAOkC,SAAWA","file":"main.min.js","sourcesContent":["'use strict';\n\n/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n(function () {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\n  if ('serviceWorker' in navigator && (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js').then(function (registration) {\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function () {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function () {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' + 'service worker became redundant.');\n\n              default:\n              // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function (e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  var urls = {\n    google: 'https://www.google.com/search',\n    images: 'https://images.google.com/images',\n    news: 'https://news.google.com/news',\n    groups: 'https://groups.google.com/groups',\n    froogle: 'https://www.google.com/search',\n    maps: 'http://maps.google.com/maps',\n    amazon: 'http://www.amazon.com',\n    youtube: 'http://www.youtube.com/results',\n    wikipedia: 'http://www.wikipedia.com/wiki',\n    fsudirectory: 'https://apps.its.fsu.edu/Directory/Directory.html'\n  };\n\n  var getTerms = function getTerms() {\n    return $('#google-search').val();\n  };\n\n  // Your custom JavaScript goes here\n  var quikhome = {\n    google: function google(e, which) {\n      e.preventDefault();\n      if (which === 'news') {\n        console.log('wtf');\n        window.location = urls[which] + '/search/section/q/' + getTerms();\n      } else if (which === 'froogle') {\n        window.location = urls[which] + '?tbm=shop&q=' + getTerms();\n      } else {\n        window.location = urls[which] + '?q=' + getTerms();\n      }\n    },\n    url: function url(e) {\n      e.preventDefault();\n      var url = String($('#url-box').val());\n      if (/^https?:\\/\\//.test(url)) {\n        window.location = url;\n      } else {\n        if (/\\.[\\w]{2,4}$/.test(url)) {\n          window.location = 'http://' + url;\n        } else {\n          window.location = 'http://' + url + '.com';\n        }\n      }\n    },\n    youtube: function youtube(e) {\n      e.preventDefault();\n      window.location = urls.youtube + '?q=' + $('#youtube-search').val();\n    },\n    wikipedia: function wikipedia(e) {\n      e.preventDefault();\n      window.location = urls.wikipedia + '/' + $('#wikipedia-search').val();\n    },\n    go: function go(e, which) {\n      e.preventDefault();\n      window.location = '' + urls[which];\n    },\n    fsu: function fsu(e) {\n      e.preventDefault();\n      window.location = urls.google + '?q=site:fsu.edu ' + getTerms();\n    },\n    fsudirectory: function fsudirectory(e) {\n      e.preventDefault();\n      window.location = urls.fsudirectory + '#result:N|' + $('#fsu-people').val() + '||||';\n    }\n  };\n\n  window.quikhome = quikhome;\n})();\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiaXNMb2NhbGhvc3QiLCJCb29sZWFuIiwid2luZG93IiwibG9jYXRpb24iLCJob3N0bmFtZSIsIm1hdGNoIiwibmF2aWdhdG9yIiwicHJvdG9jb2wiLCJzZXJ2aWNlV29ya2VyIiwicmVnaXN0ZXIiLCJ0aGVuIiwicmVnaXN0cmF0aW9uIiwib251cGRhdGVmb3VuZCIsImNvbnRyb2xsZXIiLCJpbnN0YWxsaW5nV29ya2VyIiwiaW5zdGFsbGluZyIsIm9uc3RhdGVjaGFuZ2UiLCJzdGF0ZSIsIkVycm9yIiwiY2F0Y2giLCJlIiwiY29uc29sZSIsImVycm9yIiwidXJscyIsImdvb2dsZSIsImltYWdlcyIsIm5ld3MiLCJncm91cHMiLCJmcm9vZ2xlIiwibWFwcyIsImFtYXpvbiIsInlvdXR1YmUiLCJ3aWtpcGVkaWEiLCJmc3VkaXJlY3RvcnkiLCJnZXRUZXJtcyIsIiQiLCJ2YWwiLCJxdWlraG9tZSIsIndoaWNoIiwicHJldmVudERlZmF1bHQiLCJsb2ciLCJ1cmwiLCJTdHJpbmciLCJ0ZXN0IiwiZ28iLCJmc3UiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQTtBQUNBLENBQUMsWUFBVztBQUNWOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUNBLE1BQUlBLGNBQWNDLFFBQVFDLE9BQU9DLFFBQVAsQ0FBZ0JDLFFBQWhCLEtBQTZCLFdBQTdCO0FBQ3RCO0FBQ0FGLFNBQU9DLFFBQVAsQ0FBZ0JDLFFBQWhCLEtBQTZCLE9BRlA7QUFHdEI7QUFDQUYsU0FBT0MsUUFBUCxDQUFnQkMsUUFBaEIsQ0FBeUJDLEtBQXpCLENBQ0Usd0RBREYsQ0FKYyxDQUFsQjs7QUFTQSxNQUFJLG1CQUFtQkMsU0FBbkIsS0FDQ0osT0FBT0MsUUFBUCxDQUFnQkksUUFBaEIsS0FBNkIsUUFBN0IsSUFBeUNQLFdBRDFDLENBQUosRUFDNEQ7QUFDMURNLGNBQVVFLGFBQVYsQ0FBd0JDLFFBQXhCLENBQWlDLG1CQUFqQyxF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QUtlLEtBQUwsQ0FBckI7QUFDRCxLQXBDWTtBQXFDYk8sU0FBSyxnQkFBSztBQUNSekIsUUFBRW1CLGNBQUY7QUFDQXJDLGFBQU9DLFFBQVAsR0FBcUJvQixLQUFLQyxNQUExQix3QkFBbURVLFVBQW5EO0FBQ0QsS0F4Q1k7QUF5Q2JELGtCQUFjLHlCQUFLO0FBQ2pCYixRQUFFbUIsY0FBRjtBQUNBckMsYUFBT0MsUUFBUCxHQUFxQm9CLEtBQUtVLFlBQTFCLGtCQUFtREUsRUFBRSxhQUFGLEVBQWlCQyxHQUFqQixFQUFuRDtBQUNEO0FBNUNZLEdBQWY7O0FBK0NBbEMsU0FBT21DLFFBQVAsR0FBa0JBLFFBQWxCO0FBQ0QsQ0F6SEQiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICpcbiAqICBXZWIgU3RhcnRlciBLaXRcbiAqICBDb3B5cmlnaHQgMjAxNSBHb29nbGUgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlXG4gKlxuICovXG4vKiBlc2xpbnQtZW52IGJyb3dzZXIgKi9cbihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIENoZWNrIHRvIG1ha2Ugc3VyZSBzZXJ2aWNlIHdvcmtlcnMgYXJlIHN1cHBvcnRlZCBpbiB0aGUgY3VycmVudCBicm93c2VyLFxuICAvLyBhbmQgdGhhdCB0aGUgY3VycmVudCBwYWdlIGlzIGFjY2Vzc2VkIGZyb20gYSBzZWN1cmUgb3JpZ2luLiBVc2luZyBhXG4gIC8vIHNlcnZpY2Ugd29ya2VyIGZyb20gYW4gaW5zZWN1cmUgb3JpZ2luIHdpbGwgdHJpZ2dlciBKUyBjb25zb2xlIGVycm9ycy4gU2VlXG4gIC8vIGh0dHA6Ly93d3cuY2hyb21pdW0ub3JnL0hvbWUvY2hyb21pdW0tc2VjdXJpdHkvcHJlZmVyLXNlY3VyZS1vcmlnaW5zLWZvci1wb3dlcmZ1bC1uZXctZmVhdHVyZXNcbiAgdmFyIGlzTG9jYWxob3N0ID0gQm9vbGVhbih3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUgPT09ICdsb2NhbGhvc3QnIHx8XG4gICAgICAvLyBbOjoxXSBpcyB0aGUgSVB2NiBsb2NhbGhvc3QgYWRkcmVzcy5cbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSA9PT0gJ1s6OjFdJyB8fFxuICAgICAgLy8gMTI3LjAuMC4xLzggaXMgY29uc2lkZXJlZCBsb2NhbGhvc3QgZm9yIElQdjQuXG4gICAgICB3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUubWF0Y2goXG4gICAgICAgIC9eMTI3KD86XFwuKD86MjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/KSl7M30kL1xuICAgICAgKVxuICAgICk7XG5cbiAgaWYgKCdzZXJ2aWNlV29ya2VyJyBpbiBuYXZpZ2F0b3IgJiZcbiAgICAgICh3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wgPT09ICdodHRwczonIHx8IGlzTG9jYWxob3N0KSkge1xuICAgIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLnJlZ2lzdGVyKCdzZXJ2aWNlLXdvcmtlci5qcycpXG4gICAgLnRoZW4oZnVuY3Rpb24ocmVnaXN0cmF0aW9uKSB7XG4gICAgICAvLyB1cGRhdGVmb3VuZCBpcyBmaXJlZCBpZiBzZXJ2aWNlLXdvcmtlci5qcyBjaGFuZ2VzLlxuICAgICAgcmVnaXN0cmF0aW9uLm9udXBkYXRlZm91bmQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgLy8gdXBkYXRlZm91bmQgaXMgYWxzbyBmaXJlZCB0aGUgdmVyeSBmaXJzdCB0aW1lIHRoZSBTVyBpcyBpbnN0YWxsZWQsXG4gICAgICAgIC8vIGFuZCB0aGVyZSdzIG5vIG5lZWQgdG8gcHJvbXB0IGZvciBhIHJlbG9hZCBhdCB0aGF0IHBvaW50LlxuICAgICAgICAvLyBTbyBjaGVjayBoZXJlIHRvIHNlZSBpZiB0aGUgcGFnZSBpcyBhbHJlYWR5IGNvbnRyb2xsZWQsXG4gICAgICAgIC8vIGkuZS4gd2hldGhlciB0aGVyZSdzIGFuIGV4aXN0aW5nIHNlcnZpY2Ugd29ya2VyLlxuICAgICAgICBpZiAobmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIuY29udHJvbGxlcikge1xuICAgICAgICAgIC8vIFRoZSB1cGRhdGVmb3VuZCBldmVudCBpbXBsaWVzIHRoYXQgcmVnaXN0cmF0aW9uLmluc3RhbGxpbmcgaXMgc2V0OlxuICAgICAgICAgIC8vIGh0dHBzOi8vc2xpZ2h0bHlvZmYuZ2l0aHViLmlvL1NlcnZpY2VXb3JrZXIvc3BlYy9zZXJ2aWNlX3dvcmtlci9pbmRleC5odG1sI3NlcnZpY2Utd29ya2VyLWNvbnRhaW5lci11cGRhdGVmb3VuZC1ldmVudFxuICAgICAgICAgIHZhciBpbnN0YWxsaW5nV29ya2VyID0gcmVnaXN0cmF0aW9uLmluc3RhbGxpbmc7XG5cbiAgICAgICAgICBpbnN0YWxsaW5nV29ya2VyLm9uc3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHN3aXRjaCAoaW5zdGFsbGluZ1dvcmtlci5zdGF0ZSkge1xuICAgICAgICAgICAgICBjYXNlICdpbnN0YWxsZWQnOlxuICAgICAgICAgICAgICAgIC8vIEF0IHRoaXMgcG9pbnQsIHRoZSBvbGQgY29udGVudCB3aWxsIGhhdmUgYmVlbiBwdXJnZWQgYW5kIHRoZVxuICAgICAgICAgICAgICAgIC8vIGZyZXNoIGNvbnRlbnQgd2lsbCBoYXZlIGJlZW4gYWRkZWQgdG8gdGhlIGNhY2hlLlxuICAgICAgICAgICAgICAgIC8vIEl0J3MgdGhlIHBlcmZlY3QgdGltZSB0byBkaXNwbGF5IGEgXCJOZXcgY29udGVudCBpc1xuICAgICAgICAgICAgICAgIC8vIGF2YWlsYWJsZTsgcGxlYXNlIHJlZnJlc2guXCIgbWVzc2FnZSBpbiB0aGUgcGFnZSdzIGludGVyZmFjZS5cbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICBjYXNlICdyZWR1bmRhbnQnOlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVGhlIGluc3RhbGxpbmcgJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzZXJ2aWNlIHdvcmtlciBiZWNhbWUgcmVkdW5kYW50LicpO1xuXG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgLy8gSWdub3JlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KS5jYXRjaChmdW5jdGlvbihlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBkdXJpbmcgc2VydmljZSB3b3JrZXIgcmVnaXN0cmF0aW9uOicsIGUpO1xuICAgIH0pO1xuICB9XG5cbiAgdmFyIHVybHMgPSB7XG4gICAgZ29vZ2xlOiAnaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9zZWFyY2gnLFxuICAgIGltYWdlczogJ2h0dHBzOi8vaW1hZ2VzLmdvb2dsZS5jb20vaW1hZ2VzJyxcbiAgICBuZXdzOiAnaHR0cHM6Ly9uZXdzLmdvb2dsZS5jb20vbmV3cycsXG4gICAgZ3JvdXBzOiAnaHR0cHM6Ly9ncm91cHMuZ29vZ2xlLmNvbS9ncm91cHMnLFxuICAgIGZyb29nbGU6ICdodHRwczovL3d3dy5nb29nbGUuY29tL3NlYXJjaCcsXG4gICAgbWFwczogJ2h0dHA6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcycsXG4gICAgYW1hem9uOiAnaHR0cDovL3d3dy5hbWF6b24uY29tJyxcbiAgICB5b3V0dWJlOiAnaHR0cDovL3d3dy55b3V0dWJlLmNvbS9yZXN1bHRzJyxcbiAgICB3aWtpcGVkaWE6ICdodHRwOi8vd3d3Lndpa2lwZWRpYS5jb20vd2lraScsXG4gICAgZnN1ZGlyZWN0b3J5OiAnaHR0cHM6Ly9hcHBzLml0cy5mc3UuZWR1L0RpcmVjdG9yeS9EaXJlY3RvcnkuaHRtbCcsXG4gIH07XG5cbiAgdmFyIGdldFRlcm1zID0gKCkgPT4ge1xuICAgIHJldHVybiAkKCcjZ29vZ2xlLXNlYXJjaCcpLnZhbCgpO1xuICB9O1xuXG4gIC8vIFlvdXIgY3VzdG9tIEphdmFTY3JpcHQgZ29lcyBoZXJlXG4gIHZhciBxdWlraG9tZSA9IHtcbiAgICBnb29nbGU6IChlLCB3aGljaCkgPT4ge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgaWYgKHdoaWNoID09PSAnbmV3cycpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ3d0ZicpO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24gPSBgJHt1cmxzW3doaWNoXX0vc2VhcmNoL3NlY3Rpb24vcS8ke2dldFRlcm1zKCl9YDtcbiAgICAgIH0gZWxzZSBpZiAod2hpY2ggPT09ICdmcm9vZ2xlJykge1xuICAgICAgICB3aW5kb3cubG9jYXRpb24gPSBgJHt1cmxzW3doaWNoXX0/dGJtPXNob3AmcT0ke2dldFRlcm1zKCl9YDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbiA9IGAke3VybHNbd2hpY2hdfT9xPSR7Z2V0VGVybXMoKX1gO1xuICAgICAgfVxuICAgIH0sXG4gICAgdXJsOiBlID0+IHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGxldCB1cmwgPSBTdHJpbmcoJCgnI3VybC1ib3gnKS52YWwoKSk7XG4gICAgICBpZiAoL15odHRwcz86XFwvXFwvLy50ZXN0KHVybCkpIHtcbiAgICAgICAgd2luZG93LmxvY2F0aW9uID0gKHVybCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoL1xcLltcXHddezIsNH0kLy50ZXN0KHVybCkpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSAoYGh0dHA6Ly8ke3VybH1gKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSAoYGh0dHA6Ly8ke3VybH0uY29tYCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIHlvdXR1YmU6IGUgPT4ge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgd2luZG93LmxvY2F0aW9uID0gYCR7dXJscy55b3V0dWJlfT9xPSR7JCgnI3lvdXR1YmUtc2VhcmNoJykudmFsKCl9YDtcbiAgICB9LFxuICAgIHdpa2lwZWRpYTogZSA9PiB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB3aW5kb3cubG9jYXRpb24gPSBgJHt1cmxzLndpa2lwZWRpYX0vJHskKCcjd2lraXBlZGlhLXNlYXJjaCcpLnZhbCgpfWA7XG4gICAgfSxcbiAgICBnbzogKGUsIHdoaWNoKSA9PiB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB3aW5kb3cubG9jYXRpb24gPSBgJHt1cmxzW3doaWNoXX1gO1xuICAgIH0sXG4gICAgZnN1OiBlID0+IHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHdpbmRvdy5sb2NhdGlvbiA9IGAke3VybHMuZ29vZ2xlfT9xPXNpdGU6ZnN1LmVkdSAke2dldFRlcm1zKCl9YDtcbiAgICB9LFxuICAgIGZzdWRpcmVjdG9yeTogZSA9PiB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB3aW5kb3cubG9jYXRpb24gPSBgJHt1cmxzLmZzdWRpcmVjdG9yeX0jcmVzdWx0Ok58JHskKCcjZnN1LXBlb3BsZScpLnZhbCgpfXx8fHxgO1xuICAgIH1cbiAgfTtcblxuICB3aW5kb3cucXVpa2hvbWUgPSBxdWlraG9tZTtcbn0pKCk7XG4iXX0=\n","/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  var urls = {\n    google: 'https://www.google.com/search',\n    images: 'https://images.google.com/images',\n    news: 'https://news.google.com/news',\n    groups: 'https://groups.google.com/groups',\n    froogle: 'https://www.google.com/search',\n    maps: 'http://maps.google.com/maps',\n    amazon: 'http://www.amazon.com',\n    youtube: 'http://www.youtube.com/results',\n    wikipedia: 'http://www.wikipedia.com/wiki',\n    fsudirectory: 'https://apps.its.fsu.edu/Directory/Directory.html',\n  };\n\n  var getTerms = () => {\n    return $('#google-search').val();\n  };\n\n  // Your custom JavaScript goes here\n  var quikhome = {\n    google: (e, which) => {\n      e.preventDefault();\n      if (which === 'news') {\n        console.log('wtf');\n        window.location = `${urls[which]}/search/section/q/${getTerms()}`;\n      } else if (which === 'froogle') {\n        window.location = `${urls[which]}?tbm=shop&q=${getTerms()}`;\n      } else {\n        window.location = `${urls[which]}?q=${getTerms()}`;\n      }\n    },\n    url: e => {\n      e.preventDefault();\n      let url = String($('#url-box').val());\n      if (/^https?:\\/\\//.test(url)) {\n        window.location = (url);\n      } else {\n        if (/\\.[\\w]{2,4}$/.test(url)) {\n          window.location = (`http://${url}`);\n        } else {\n          window.location = (`http://${url}.com`);\n        }\n      }\n    },\n    youtube: e => {\n      e.preventDefault();\n      window.location = `${urls.youtube}?q=${$('#youtube-search').val()}`;\n    },\n    wikipedia: e => {\n      e.preventDefault();\n      window.location = `${urls.wikipedia}/${$('#wikipedia-search').val()}`;\n    },\n    go: (e, which) => {\n      e.preventDefault();\n      window.location = `${urls[which]}`;\n    },\n    fsu: e => {\n      e.preventDefault();\n      window.location = `${urls.google}?q=site:fsu.edu ${getTerms()}`;\n    },\n    fsudirectory: e => {\n      e.preventDefault();\n      window.location = `${urls.fsudirectory}#result:N|${$('#fsu-people').val()}||||`;\n    }\n  };\n\n  window.quikhome = quikhome;\n})();\n"]}